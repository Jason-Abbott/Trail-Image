{{#contentFor "head"}}
	<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
	<link href='http://fonts.googleapis.com/css?family=Orbitron:700|Droid+Sans:400,700' rel='stylesheet' type='text/css'>
	<link href='/css/map.css' rel='stylesheet' type='text/css'/>
	<script type='text/javascript'>
		var timer = 0;

		google.maps.event.addDomListener(window, 'load', function()
		{
			var miles = 0, hours = 0, topSpeed = 0, avgSpeed = 0, count = 0, geo = null;
			var canvas = document.getElementById('map-canvas');
			var preview = new google.maps.InfoWindow();
			var bounds = new google.maps.LatLngBounds();
			var map = new google.maps.Map(canvas, { mapTypeId: google.maps.MapTypeId.HYBRID	});
			var photoID = {{photoID}};

			{{! https://developers.google.com/maps/documentation/javascript/datalayer#style_options }}
			{{! https://developers.google.com/maps/documentation/javascript/symbols }}
			{{! http://mapicons.nicolasmollet.com/ }}
			map.data.setStyle(function(feature)
			{
				var selected = parseInt(feature.getProperty('id')) == photoID;

				return {
					icon: (selected) ? '/img/camera-marker-selected.png' : '/img/camera-marker.png',
					clickable: (feature.getGeometry() instanceof google.maps.Data.Point),
					strokeWeight: 2,
					strokeColor: 'red'
				};
			});

			map.data.addListener('addfeature', function(event)
			{
				clearTimeout(timer);

				geo = event.feature.getGeometry();

				var speed = 0;

				extend(bounds, geo);

				if (geo instanceof google.maps.Data.LineString || geo instanceof google.maps.Data.MultiLineString)
				{
					count++;
					miles += event.feature.getProperty('distance');
					hours += event.feature.getProperty('duration');

					speed = parseFloat(event.feature.getProperty('topSpeed'));

					if (speed > topSpeed) { topSpeed = speed; }

					speed = parseFloat(event.feature.getProperty('avgSpeed'));

					avgSpeed = ((avgSpeed * (count - 1)) + speed) / count;
				}

				timer = setTimeout(function()
				{
					map.fitBounds(bounds);
					$('#distance').html(miles.toFixed(1));
					$('#duration').html(hoursAndMinutes(hours));
					$('#top-speed').html(topSpeed.toFixed(1));
					$('#avg-speed').html(avgSpeed.toFixed(1));
				},
						200);
			});

			{{! https://developers.google.com/maps/documentation/javascript/examples/layer-data-dragndrop }}
			map.data.addListener('click', function(event)
			{
				var image = event.feature.getProperty('preview');

				if (preview)
				{
					var id = event.feature.getProperty('id');
					var geo = event.feature.getGeometry();

					preview.setOptions({
						content: '<a href="/{{post.slug}}#' + id + '"><img src="' + image + '"/></a>',
						position: geo.get()
					});
					preview.open(map);
				}
			});

			map.data.addListener('mouseover', function(event)
			{
				map.data.overrideStyle(event.feature, {icon: '/img/camera-marker-hover.png'});
			});

			map.data.addListener('mouseout', function(event)
			{
				map.data.revertStyle();
			});

			map.data.loadGeoJson('/{{post.slug}}/geo.json');
		});

		function hoursAndMinutes(hours)
		{
			var h = Math.floor(hours);
			var m = (Math.round(60 * (hours - h))).toString();

			if (m.length < 2) { m = '0' + m; }

			return h + ':' + m;
		}

		/**
		 * Update a map's viewport to fit each geometry in a dataset
		 * @param {google.maps.LatLngBounds} bounds
		 * @param {google.maps.Geometry|google.maps.Point} geometry coordinates to apply
		 */
		function extend(bounds, geometry)
		{
			if (geometry instanceof google.maps.LatLng)
			{
				bounds.extend(geometry);
			}
			else if (geometry instanceof google.maps.Data.Point)
			{
				bounds.extend(geometry.get());
			}
			else
			{
				geometry.getArray().forEach(function(g) { extend(bounds, g); });
			}
		}
	</script>
{{/contentFor}}

<div id="map-canvas"></div>
{{> menu}}
<div id="summary">
	Miles
	<div class="lcd" id="distance">0</div>
	Hours
	<div class="lcd" id="duration">0</div>
	Top Speed
	<div class="lcd" id="top-speed">0</div>
	Avg Speed
	<div class="lcd" id="avg-speed">0</div>
</div>
